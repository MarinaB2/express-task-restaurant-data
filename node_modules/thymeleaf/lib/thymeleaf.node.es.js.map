{"version":3,"file":"thymeleaf.node.es.js","sources":["../source/processors/AttributeProcessor.js","../source/standard/processors/AttrAttributeProcessor.js","../source/processors/ElementProcessor.js","../source/utilities/Dom.js","../source/standard/processors/BlockElementProcessor.js","../source/standard/processors/CheckedAttributeProcessor.js","../source/standard/processors/ClassAppendAttributeProcessor.js","../source/standard/processors/EachAttributeProcessor.js","../source/standard/processors/EmptyableAttributeProcessor.js","../source/standard/processors/FragmentAttributeProcessor.js","../source/standard/processors/IfAttributeProcessor.js","../source/utilities/Fragments.js","../source/standard/processors/InsertAttributeProcessor.js","../source/standard/processors/RemovableAttributeProcessor.js","../source/standard/processors/RemoveAttributeProcessor.js","../source/standard/processors/ReplaceAttributeProcessor.js","../source/utilities/Messages.js","../source/standard/processors/TextAttributeProcessor.js","../source/standard/processors/UnlessAttributeProcessor.js","../source/standard/processors/UTextAttributeProcessor.js","../source/standard/processors/WithAttributeProcessor.js","../source/standard/processors/XmlNsAttributeProcessor.js","../source/dialects/Dialect.js","../source/standard/StandardDialect.js","../source/Configurations.js","../source/processors/Matcher.js","../source/parser/InputBuffer.js","../source/parser/Parser.js","../source/standard/expressions/ExpressionProcessor.js","../source/standard/expressions/AllInput.js","../source/parser/Rule.js","../source/standard/expressions/ThymeleafRule.js","../source/parser/Grammar.js","../source/parser/Operators.js","../source/standard/expressions/FragmentSignatureGrammar.js","../source/parser/RegularExpression.js","../source/standard/expressions/ThymeleafExpressionLanguage.js","../source/utilities/Functions.js","../source/TemplateEngine.js"],"sourcesContent":["/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common class for attribute processors.\n * \n * @author Emanuel Rabina\n */\nexport default class AttributeProcessor {\n\n\t/**\n\t * Constructor, sets this processor's prefix and name.\n\t * \n\t * @param {String} prefix\n\t * @param {String} name\n\t * @param {Object} [isomorphic]\n\t */\n\tconstructor(prefix, name, isomorphic) {\n\n\t\tthis.prefix     = prefix;\n\t\tthis.name       = name;\n\t\tthis.isomorphic = isomorphic;\n\t}\n\n\t/**\n\t * Process the given attribute on the element it appears.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Boolean} Whether or not the parent tree needs reprocessing because\n\t *   of modifications made by the processor.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\telement.removeAttribute(attribute);\n\t\tif (this.isomorphic) {\n\t\t\telement.removeAttribute(`${this.prefix}:${this.name}`);\n\t\t}\n\t\treturn false;\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nimport {escapeHtml} from '@ultraq/string-utils';\n\nexport const NAME = 'attr';\n\n/**\n * JS equivalent of Thymeleaf's `th:attr` attribute processor, modifies or sets\n * a target attribute to whatever its associated expression evaluates to.\n * \n * @author Emanuel Rabina\n */\nexport default class AttrAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `attr` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t * @param {Object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:attr` or `data-th-attr` attribute\n\t * on it, picking out the target attributes and setting them to whatever their\n\t * expressions evaluate to.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Boolean} `false`.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\t// TODO: This regex, is this some kind of value list that needs to be\n\t\t//       turned into an expression?\n\t\tif (/(.+=.+,)*.+=.+/.test(attributeValue)) {\n\t\t\tattributeValue.split(',').forEach(attribute => {\n\t\t\t\tlet attributeParts = attribute.split('=');\n\t\t\t\telement.setAttribute(attributeParts[0], escapeHtml(context.expressionProcessor.process(attributeParts[1], context)));\n\t\t\t});\n\t\t}\n\t\t/* istanbul ignore next */\n\t\telse if (process.env.NODE_ENV !== 'test') {\n\t\t\tconsole.warn(`Value to ${attribute}, ${attributeValue}, doesn't seem to contain an attribute assignment expression.  Ignoring.`);\n\t\t}\n\t\treturn super.process(element, attribute, attributeValue, context);\n\t}\n}\n","/* \n * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Parent class for element processors.\n * \n * @author Emanuel Rabina\n */\nexport default class ElementProcessor {\n\n\t/**\n\t * Constructor, sets this processor's prefix and name.\n\t * \n\t * @param {String} prefix\n\t * @param {String} name\n\t */\n\tconstructor(prefix, name) {\n\n\t\tthis.prefix = prefix;\n\t\tthis.name   = name;\n\t}\n\n\t/**\n\t * Processes the given element.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {Object} context\n\t * @return {Boolean} Whether or not the parent tree needs reprocessing because\n\t *   of modifications made by the processor.\n\t */\n\tprocess(element, context) {\n\n\t\treturn false;\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* global ENVIRONMENT */\nimport {\n\tdeserialize as domDeserialize,\n\tserialize as domSerialize\n}              from '@ultraq/dom-utils';\nimport {JSDOM} from 'jsdom';\n\n// Node.nodeType values, not present outside of a JSDOM environment so can't\n// reference them w/ Node.X\n// For a full list of values, see: https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nexport const NODE_TYPE_DOCUMENT_TYPE = 10;\nexport const NODE_TYPE_ELEMENT = 1;\n\n/**\n * Create and return a new HTML fragment using JSDOM from the given string.\n * Used for tests.\n * \n * @param {String} htmlString\n * @return {Element}\n */\nexport function createHtml(htmlString) {\n\treturn new JSDOM(htmlString).window.document.body.firstElementChild;\n}\n\n/**\n * Returns the value of a Thymeleaf attribute processor.\n * \n * @param {Element} element\n * @param {String} prefix\n * @param {String} processorName\n * @return {String} The value of the Thymeleaf attribute processor, or `null`\n *   if the attribute processor wasn't present.\n */\nexport function getThymeleafAttributeValue(element, prefix, processorName) {\n\treturn element.getAttribute(`${prefix}:${processorName}`) ||\n\t       element.getAttribute(`data-${prefix}-${processorName}`);\n}\n\n/**\n * Use either JSDOM or the browser's native DOM parsing to deserialize the HTML\n * string into a document fragment.\n * \n * @param {String} htmlString\n * @return {DocumentFragment}\n */\nexport function deserialize(htmlString) {\n\t/* istanbul ignore if */\n\tif (ENVIRONMENT === 'browser') {\n\t\treturn domDeserialize(htmlString);\n\t}\n\telse {\n\t\treturn new JSDOM(htmlString).window.document;\n\t}\n}\n\n/**\n * Use either JSDOM or the browser's native DOM serialization to serialize a\n * document fragment into an HTML string.\n * \n * @param {DocumentFragment} documentFragment\n * @return {String}\n */\nexport function serialize(documentFragment) {\n\t/* istanbul ignore if */\n\tif (ENVIRONMENT === 'browser') {\n\t\treturn domSerialize(documentFragment);\n\t}\n\telse {\n\t\tlet result = '';\n\t\tlet {firstChild, firstElementChild} = documentFragment;\n\t\tif (firstChild.nodeType === NODE_TYPE_DOCUMENT_TYPE) {\n\t\t\tresult += `<!DOCTYPE ${firstChild.name}>`;\n\t\t}\n\t\treturn result + firstElementChild.outerHTML;\n\t}\n}\n","/* \n * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ElementProcessor    from '../../processors/ElementProcessor.js';\nimport {NODE_TYPE_ELEMENT} from '../../utilities/Dom.js';\n\nexport const NAME = 'block';\n\n/**\n * Equivalent of Thymeleaf's \"synthetic tag\", `th:block`, which removes itself,\n * leaving the body of the tag behind.\n * \n * @author Emanuel Rabina\n */\nexport default class BlockElementProcessor extends ElementProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `block` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, NAME);\n\t}\n\n\t/**\n\t * Processes an element named `th:block`, removing itself to leave its\n\t * body/contents behind.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {Object} context\n\t * @return {Boolean} `true` to indicate that the elements need reprocessing.\n\t */\n\tprocess(element, context) {\n\n\t\tlet parent = element.parentElement;\n\t\twhile (element.firstChild) {\n\t\t\tlet child = element.firstChild;\n\t\t\tparent.insertBefore(child, element);\n\n\t\t\tif (child.nodeType === NODE_TYPE_ELEMENT && element.__thymeleafLocalVariables) {\n\t\t\t\tchild.__thymeleafLocalVariables = {\n\t\t\t\t\t...(child.__thymeleafLocalVariables || {}),\n\t\t\t\t\t...element.__thymeleafLocalVariables\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tparent.removeChild(element);\n\n\t\treturn true;\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nexport const NAME = 'checked';\n\n/**\n * Thymeleaf's `th:checked` attribute processor, sets or removes the `checked`\n * attribute from an element based on the result of the expression within it.\n * \n * TODO: This is one of HTML5s \"boolean attributes\", attributes whose values are\n *       true simply by being present in the element, regardless of the value\n *       inside it.  To act as false, the attribute has to be removed.  Find a\n *       way to generate these from some list of boolean attributes so that I\n *       don't need to write a class for each one!\n * \n * @author Emanuel Rabina\n */\nexport default class CheckedAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `checked` name and supplied\n\t * prefix.\n\t * \n\t * @param {String} prefix\n\t * @param {Object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:checked` or `data-th-checked`\n\t * attribute on it, either setting or removing a `checked` attribute to the\n\t * current element based on the result of the inner expression.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Boolean} `false`.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tlet result = context.expressionProcessor.process(attributeValue, context);\n\t\tif (result) {\n\t\t\telement.setAttribute('checked', '');\n\t\t}\n\t\telse {\n\t\t\telement.removeAttribute('checked');\n\t\t}\n\n\t\treturn super.process(element, attribute, attributeValue, context);\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nexport const NAME = 'classappend';\n\n/**\n * The `th:classappend` is a special attribute that applies the expression to\n * any existing classes already on an element.\n * \n * @author Emanuel Rabina\n */\nexport default class ClassAppendAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `attr` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t * @param {Object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:classappend` or `data-th-classappend`\n\t * attribute on it, adding the resulting classes to any existing classes on\n\t * the current element.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Boolean} `false`.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tlet classes = context.expressionProcessor.process(attributeValue, context);\n\t\tif (classes) {\n\t\t\telement.className += ` ${classes}`;\n\t\t}\n\t\treturn super.process(element, attribute, attributeValue, context);\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nexport const NAME = 'each';\n\n/**\n * JS equivalent of Thymeleaf's `th:each` attribute processor, iterates over an\n * [iterable object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols),\n * executing a piece of template for every iteration.\n * \n * @author Emanuel Rabina\n */\nexport default class EachAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `each` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t * @param {Object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:each`/`data-th-each` attribute,\n\t * repeating the markup for every object in the iterable value.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Boolean} Whether or not the parent element needs to do a second\n\t *   pass as its children have been modified by this processor.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tsuper.process(element, attribute, attributeValue, context);\n\n\t\tlet iterationInfo = context.expressionProcessor.process(attributeValue, context);\n\t\tif (iterationInfo) {\n\t\t\tlet {localValueName, iterable} = iterationInfo;\n\t\t\tlet templateNode = element.cloneNode(true);\n\n\t\t\tfor (let value of iterable) {\n\t\t\t\tlet localClone = templateNode.cloneNode(true);\n\t\t\t\tlocalClone.__thymeleafLocalVariables = {\n\t\t\t\t\t[localValueName]: value\n\t\t\t\t};\n\t\t\t\telement.parentElement.appendChild(localClone);\n\t\t\t}\n\t\t}\n\t\telement.parentElement.removeChild(element);\n\n\t\treturn true;\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\n/**\n * Configurable attribute processor that sets or empties an attribute value on\n * an element if the result of its expression is truthy or falsey respectively.\n * \n * @author Emanuel Rabina\n */\nexport default class EmptyableAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set the name of the attribute this processor will operate on.\n\t * \n\t * @param {String} prefix\n\t * @param {String} name\n\t * @param {Object} [isomorphic]\n\t */\n\tconstructor(prefix, name, isomorphic) {\n\n\t\tsuper(prefix, name, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains the configured attribute to be worked\n\t * on, setting it if the expression resolves to a truthy value, or removing it\n\t * if it resolves to a falsey value.\n\t * \n\t * @param {Element} element \n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Boolean} `false`.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tlet value = context.expressionProcessor.process(attributeValue, context);\n\t\telement.setAttribute(this.name, value ? value.toString() : '');\n\t\treturn super.process(element, attribute, attributeValue, context);\n\t}\n}\n\nexport const EMPTYABLE_ATTRIBUTE_NAMES = [\n\t'datetime',\n\t'href',\n\t'src',\n\t'style',\n\t'value'\n];\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nexport const NAME = 'fragment';\n\n/**\n * JS equivalent of Thymeleaf's `th:fragment` attribute processor, marks an\n * element as a template fragment that can be imported by other processors like\n * `th:insert`.\n * \n * @author Emanuel Rabina\n */\nexport default class FragmentAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `fragment` name and supplied\n\t * prefix.\n\t * \n\t * @param {String} prefix\n\t * @param {Object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nexport const NAME = 'if';\n\n/**\n * JS equivalent of Thymeleaf's `th:if` attribute processor, includes or\n * excludes the current element and its children from rendering, depending on\n * the evaluation of the expression in the attribute value.\n * \n * @author Emanuel Rabina\n */\nexport default class IfAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `if` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t * @param {Object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:if` or `data-th-if` attribute\n\t * on it, evaluating the expression for truthy/falsey, rendering/excluding the\n\t * element and its children based on the result.\n\t * \n\t * @param {Element} element \n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Boolean} `true` if the element was removed.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tlet expressionResult = context.expressionProcessor.process(attributeValue, context);\n\t\tif (!expressionResult) {\n\t\t\telement.remove();\n\t\t\treturn true;\n\t\t}\n\t\treturn super.process(element, attribute, attributeValue, context);\n\t}\n}\n","/* \n * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {deserialize} from './Dom.js';\nimport {NAME}        from '../standard/processors/FragmentAttributeProcessor.js';\n\nimport {$} from 'dumb-query-selector';\n\n/**\n * Extract HTML from the target identified by the given fragment information.\n * \n * @param {String} dialectPrefix\n * @param {Object} fragmentInfo\n * @param {Object} context\n * @return {Promise<Element>}\n */\nexport async function extractFragment(dialectPrefix, fragmentInfo, context) {\n\tlet {templateResolver} = context;\n\tif (templateResolver) {\n\t\tlet {templateName, fragmentName} = fragmentInfo;\n\t\tlet template = deserialize(await templateResolver(templateName));\n\t\treturn $(`[${dialectPrefix}\\\\:${NAME}^=\"${fragmentName}\"]`, template) ||\n\t\t\t\t\t $(`[data-${dialectPrefix}-${NAME}^=\"${fragmentName}\"]`, template);\n\t}\n\tconsole.log('No template resolver configured');\n\treturn null;\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {NAME as FragmentAttributeProcessorName} from './FragmentAttributeProcessor.js';\nimport AttributeProcessor                       from '../../processors/AttributeProcessor.js';\nimport {getThymeleafAttributeValue}             from '../../utilities/Dom.js';\nimport {extractFragment}                        from '../../utilities/Fragments.js';\n\nimport {clearChildren} from '@ultraq/dom-utils';\n\nexport const NAME = 'insert';\n\n/**\n * JS equivalent of Thymeleaf's `th:insert` attribute processor, inserts the\n * referenced template fragment as a child of the current element.\n * \n * @author Emanuel Rabina\n */\nexport default class InsertAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `insert` name and supplied\n\t * prefix.\n\t * \n\t * @param {String} prefix\n\t * @param {Object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:insert`/`data-th-insert` attribute,\n\t * replacing the current element's children with the DOM in the referenced\n\t * fragment.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Boolean} Whether or not the parent element needs to do a second\n\t *   pass as its children have been modified by this processor.\n\t */\n\tasync process(element, attribute, attributeValue, context) {\n\n\t\tsuper.process(element, attribute, attributeValue, context);\n\t\tclearChildren(element);\n\n\t\tlet fragmentInfo = context.expressionProcessor.process(attributeValue, context);\n\t\tif (fragmentInfo) {\n\t\t\tlet fragment = await extractFragment(this.prefix, fragmentInfo, context);\n\t\t\tif (fragment) {\n\t\t\t\tlet fragmentSignature = getThymeleafAttributeValue(fragment, this.prefix, FragmentAttributeProcessorName);\n\t\t\t\tlet {parameterNames} = context.fragmentSignatureProcessor.process(fragmentSignature, context);\n\t\t\t\tif (parameterNames) {\n\t\t\t\t\tlet {parameters} = fragmentInfo;\n\t\t\t\t\tlet localContext = {};\n\t\t\t\t\tparameterNames.forEach((parameterName, index) => {\n\t\t\t\t\t\tlocalContext[parameterName] = parameters[parameterName] || parameters[index] || null;\n\t\t\t\t\t});\n\t\t\t\t\tfragment.__thymeleafLocalVariables = localContext;\n\t\t\t\t}\n\t\t\t\telement.appendChild(fragment);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\n/**\n * Configurable attribute processor that sets or removes an attribute on an\n * element if the result of its expression is truthy or falsey respectively.\n * \n * @author Emanuel Rabina\n */\nexport default class RemovableAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set the name of the attribute this processor will operate on.\n\t * \n\t * @param {String} prefix\n\t * @param {String} name\n\t * @param {Object} [isomorphic]\n\t */\n\tconstructor(prefix, name, isomorphic) {\n\n\t\tsuper(prefix, name, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains the configured attribute to be worked\n\t * on, setting it if the expression resolves to a truthy value, or removing it\n\t * if it resolves to a falsey value.\n\t * \n\t * @param {Element} element \n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Boolean} `false`.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tlet value = context.expressionProcessor.process(attributeValue, context);\n\t\tif (value) {\n\t\t\telement.setAttribute(this.name, value.toString());\n\t\t}\n\t\telse {\n\t\t\telement.removeAttribute(this.name);\n\t\t}\n\n\t\treturn super.process(element, attribute, attributeValue, context);\n\t}\n}\n\nexport const REMOVABLE_ATTRIBUTE_NAMES = [\n\t'alt',\n\t'class'\n];\n","/* \n * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nexport const NAME = 'remove';\n\n/**\n * `th:remove`, used to remove the current element or select parts of it (and\n * its children).\n * \n * @author Emanuel Rabina\n */\nexport default class RemoveAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `remove` name and supplied\n\t * prefix.\n\t * \n\t * @param {String} prefix\n\t * @param {Object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:remove`/`data-th-remove`\n\t * attribute, removing the current element or parts of it based on the\n\t * attribute value.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Boolean} Whether reprocessing behaviour needs to be applied, only\n\t *   when the current tag has been removed.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tsuper.process(element, attribute, attributeValue, context);\n\n\t\tswitch (attributeValue) {\n\t\t\tcase 'all':\n\t\t\t\telement.parentElement.removeChild(element);\n\t\t\t\treturn true;\n\t\t\tcase 'all-but-first':\n\t\t\t\twhile (element.lastElementChild !== element.firstElementChild) {\n\t\t\t\t\telement.removeChild(element.lastElementChild);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t}\n\t}\n}\n","/*\n * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {NAME as FragmentAttributeProcessorName} from './FragmentAttributeProcessor.js';\nimport AttributeProcessor                       from '../../processors/AttributeProcessor.js';\nimport {getThymeleafAttributeValue}             from '../../utilities/Dom.js';\nimport {extractFragment}                        from '../../utilities/Fragments.js';\n\nimport {clearChildren} from '@ultraq/dom-utils';\n\nexport const NAME = 'replace';\n\n/**\n * JS equivalent of Thymeleaf's `th:relace` attribute processor, replaces the\n * current element with the fragment referenced by the processor.\n * \n * @author Emanuel Rabina\n */\nexport default class ReplaceAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `replace` name and supplied\n\t * prefix.\n\t * \n\t * @param {String} prefix\n\t * @param {Object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:replace`/`data-th-replace`\n\t * attribute, replacing the current element with the DOM in the referenced\n\t * fragment.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Boolean} Whether or not the parent element needs to do a second\n\t *   pass as its children have been modified by this processor.\n\t */\n\tasync process(element, attribute, attributeValue, context) {\n\n\t\tsuper.process(element, attribute, attributeValue, context);\n\t\tclearChildren(element);\n\n\t\tlet fragmentInfo = context.expressionProcessor.process(attributeValue, context);\n\t\tif (fragmentInfo) {\n\t\t\tlet fragment = await extractFragment(this.prefix, fragmentInfo, context);\n\t\t\tif (fragment) {\n\t\t\t\tlet fragmentSignature = getThymeleafAttributeValue(fragment, this.prefix, FragmentAttributeProcessorName);\n\t\t\t\tlet {parameterNames} = context.fragmentSignatureProcessor.process(fragmentSignature, context);\n\t\t\t\tif (parameterNames) {\n\t\t\t\t\tlet {parameters} = fragmentInfo;\n\t\t\t\t\tlet localContext = {};\n\t\t\t\t\tparameterNames.forEach((parameterName, index) => {\n\t\t\t\t\t\tlocalContext[parameterName] = parameters[parameterName] || parameters[index] || null;\n\t\t\t\t\t});\n\t\t\t\t\tfragment.__thymeleafLocalVariables = localContext;\n\t\t\t\t}\n\n\t\t\t\t// TODO: Can simplify this with insertAdjacent*(), but need to upgrade\n\t\t\t\t//       JSDOM first.\n\t\t\t\telement.parentElement.insertBefore(fragment, element);\n\t\t\t\telement.remove();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\telement.remove();\n\t\treturn false;\n\t}\n}\n","/* \n * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Build a message string from a processed message expression.\n * \n * @param {Object} messageInfo\n * @param {Function} messageResolver\n * @return {Promise<String>}\n */\nexport async function buildMessage(messageInfo, messageResolver) {\n\tif (messageResolver) {\n\t\tlet {key, parameters} = messageInfo;\n\t\treturn await messageResolver(key, parameters) || '';\n\t}\n\tconsole.log('No message resolver configured');\n\treturn null;\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\nimport {buildMessage}     from '../../utilities/Messages.js';\n\nexport const NAME = 'text';\n\n/**\n * JS equivalent of Thymeleaf's `th:text` attribute processor, applies the\n * expression in the attribute value to the text content of the element being\n * processed, escaping any unsafe input.\n * \n * @author Emanuel Rabina\n */\nexport default class TextAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `text` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t * @param {Object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:text` or `data-th-text` attribute\n\t * on it, taking the text expression in the value and applying it to the text\n\t * content of the element.\n\t * \n\t * @param {Element} element \n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Boolean} `false`.\n\t */\n\tasync process(element, attribute, attributeValue, context) {\n\n\t\t// TODO: Move message constructon to the expression language?  Need to make\n\t\t//       all the executions async!\n\t\tlet messageResult = context.expressionProcessor.process(attributeValue, context);\n\t\telement.textContent =\n\t\t\ttypeof messageResult === 'object' ? await buildMessage(messageResult, context.messageResolver) :\n\t\t\tmessageResult;\n\t\treturn super.process(element, attribute, attributeValue, context);\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nimport {clearChildren} from '@ultraq/dom-utils';\n\nexport const NAME = 'unless';\n\n/**\n * JS equivalent of Thymeleaf's `th:unless` attribute processor, excludes or\n * includes the current element and its children from rendering, depending on\n * the evaluation of the expression in the attribute value.\n * \n * @author Robbie Bardijn\n */\nexport default class UnlessAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `unless` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t * @param {Object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:unless` or `data-th-unless` attribute\n\t * on it, evaluating the expression for falsey/truthy, excluding/rendering the\n\t * element and its children based on the result.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Boolean} `true` if the element was removed.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tlet expressionResult = context.expressionProcessor.process(attributeValue, context);\n\t\tif (expressionResult) {\n\t\t\tclearChildren(element);\n\t\t\t// TODO: element.remove()?\n\t\t\telement.parentNode.removeChild(element);\n\t\t\treturn true;\n\t\t}\n\t\treturn super.process(element, attribute, attributeValue, context);\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nexport const NAME = 'utext';\n\n/**\n * JS equivalent of Thymeleaf's `th:utext` attribute processor, applies the\n * expression in the attribute value to the text content of the element being\n * processed.\n * \n * @author Emanuel Rabina\n */\nexport default class UTextAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `utext` name and supplied\n\t * prefix.\n\t * \n\t * @param {String} prefix\n\t * @param {Object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:utext` or `data-th-utext`\n\t * attribute on it, taking the text expression in the value and applying it to\n\t * the text content of the element.\n\t *\n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Boolean} `false`.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\telement.innerHTML = context.expressionProcessor.process(attributeValue, context);\n\t\treturn super.process(element, attribute, attributeValue, context);\n\t}\n}\n","/* \n * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nexport const NAME = 'with';\n\n/**\n * `th:with`, used for creating scoped variables, useful for aliasing things.\n * \n * @author Emanuel Rabina\n */\nexport default class WithAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `with` name and supplied\n\t * prefix.\n\t * \n\t * @param {String} prefix\n\t * @param {Object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:with`/`data-th-with` attribute,\n\t * setting a variable scoped to the current element with the given name.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Boolean} `true` as adding new local variables needs to re-run\n\t *   processing.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tsuper.process(element, attribute, attributeValue, context);\n\n\t\tlet localVariables = {};\n\t\tlet aliases = context.expressionProcessor.process(attributeValue, context);\n\t\taliases.forEach(({name, value}) => {\n\t\t\tlocalVariables[name] = value;\n\t\t});\n\t\telement.__thymeleafLocalVariables = localVariables;\n\n\t\treturn true;\n\t}\n}\n","/* \n * Copyright 2020, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\n/**\n * `xmlns:th`, used for removing the Thymeleaf XML namespace often added to HTML\n * files to satisfy the XML validators that are used to edit them.\n * \n * @author Emanuel Rabina\n */\nexport default class XmlNsAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to operate on the given XML namespace.\n\t * \n\t * @param {String} prefix\n\t * @param {Object} isomorphic\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper('xmlns', prefix);\n\t\tthis.isomorphic = isomorphic;\n\t}\n\n\t/**\n\t * Removes the XML namespace from an element.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Boolean} `false`, as removing the XML namespace never requires\n\t *   repropcessing.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\telement.removeAttribute(attribute);\n\t\tif (this.isomorphic) {\n\t\t\telement.removeAttribute(`xmlns:${this.isomorphic.prefix}`);\n\t\t}\n\t\treturn false;\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common class for dialects.\n * \n * @author Emanuel Rabina\n */\nexport default class Dialect {\n\n\t/**\n\t * Constructor, sets this dialect's name and optional prefix.\n\t * \n\t * @param {String} name\n\t * @param {String} [prefix]\n\t */\n\tconstructor(name, prefix) {\n\n\t\tthis.name   = name;\n\t\tthis.prefix = prefix;\n\t}\n\n\t/**\n\t * Return an object whose keys are the expression object names, the values the\n\t * expression object available properties and methods.\n\t * \n\t * @return {Object}\n\t */\n\tget expressionObjects() {\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Return an array of processors.\n\t * \n\t * @return {Array}\n\t */\n\tget processors() {\n\n\t\treturn null;\n\t}\n}\n","/*\n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttrAttributeProcessor        from './processors/AttrAttributeProcessor.js';\nimport BlockElementProcessor         from './processors/BlockElementProcessor.js';\nimport CheckedAttributeProcessor     from './processors/CheckedAttributeProcessor.js';\nimport ClassAppendAttributeProcessor from './processors/ClassAppendAttributeProcessor.js';\nimport EachAttributeProcessor        from './processors/EachAttributeProcessor.js';\nimport EmptyableAttributeProcessor, {\n\tEMPTYABLE_ATTRIBUTE_NAMES\n}                                    from './processors/EmptyableAttributeProcessor.js';\nimport FragmentAttributeProcessor    from './processors/FragmentAttributeProcessor.js';\nimport IfAttributeProcessor          from './processors/IfAttributeProcessor.js';\nimport InsertAttributeProcessor      from './processors/InsertAttributeProcessor.js';\nimport RemovableAttributeProcessor, {\n\tREMOVABLE_ATTRIBUTE_NAMES\n}                                    from './processors/RemovableAttributeProcessor.js';\nimport RemoveAttributeProcessor      from './processors/RemoveAttributeProcessor.js';\nimport ReplaceAttributeProcessor     from './processors/ReplaceAttributeProcessor.js';\nimport TextAttributeProcessor        from './processors/TextAttributeProcessor.js';\nimport UnlessAttributeProcessor      from './processors/UnlessAttributeProcessor.js';\nimport UTextAttributeProcessor       from './processors/UTextAttributeProcessor.js';\nimport WithAttributeProcessor        from './processors/WithAttributeProcessor.js';\nimport XmlNsAttributeProcessor       from './processors/XmlNsAttributeProcessor.js';\nimport Dialect                       from '../dialects/Dialect.js';\n\nexport const NAME = 'Standard';\nexport const DEFAULT_PREFIX = 'thjs';\n\n/**\n * The out-of-the-box dialect for Thymeleaf, the \"Standard Dialect\".\n * \n * @author Emanuel Rabina\n */\nexport default class StandardDialect extends Dialect {\n\n\t/**\n\t * Create an instance of this dialect with the name \"Standard\" and given\n\t * prefix.\n\t * \n\t * @param {String} [prefix='thjs']\n\t * @param {Object} [isomorphic]\n\t */\n\tconstructor(prefix = DEFAULT_PREFIX, isomorphic) {\n\n\t\tsuper(NAME, prefix);\n\t\tthis.isomorphic = isomorphic;\n\t}\n\n\t/**\n\t * Returns the supported standard processors.\n\t * \n\t * @return {Array} A list of the processors included in this dialect.\n\t */\n\tget processors() {\n\n\t\t// TODO: This is a very basic way of imposing the order of attribute\n\t\t//       processors.  It's currently ordered in the same way as OG\n\t\t//       Thymeleaf.  Figure out a 'proper' way to do the ordering.\n\n\t\t// Order taken from https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html#attribute-precedence\n\t\tlet {prefix, isomorphic} = this;\n\t\treturn [\n\t\t\t// Fragment inclusion\n\t\t\tnew InsertAttributeProcessor(prefix, isomorphic),\n\t\t\tnew ReplaceAttributeProcessor(prefix, isomorphic),\n\n\t\t\t// Fragment iteration\n\t\t\tnew EachAttributeProcessor(prefix, isomorphic),\n\n\t\t\t// Conditional evaluation\n\t\t\tnew IfAttributeProcessor(prefix, isomorphic),\n\t\t\tnew UnlessAttributeProcessor(prefix, isomorphic),\n\n\t\t\t// Local variable definition\n\t\t\tnew WithAttributeProcessor(prefix, isomorphic),\n\n\t\t\t// General attribute modification\n\t\t\tnew AttrAttributeProcessor(prefix, isomorphic),\n\t\t\tnew ClassAppendAttributeProcessor(prefix, isomorphic),\n\t\t\t...EMPTYABLE_ATTRIBUTE_NAMES.map(attributeName => {\n\t\t\t\treturn new EmptyableAttributeProcessor(prefix, attributeName, isomorphic);\n\t\t\t}),\n\t\t\t...REMOVABLE_ATTRIBUTE_NAMES.map(attributeName => {\n\t\t\t\treturn new RemovableAttributeProcessor(prefix, attributeName, isomorphic);\n\t\t\t}),\n\n\t\t\t// Specific attribute modification\n\t\t\tnew CheckedAttributeProcessor(prefix, isomorphic),\n\n\t\t\t// Text\n\t\t\tnew TextAttributeProcessor(prefix, isomorphic),\n\t\t\tnew UTextAttributeProcessor(prefix, isomorphic),\n\n\t\t\t// Fragment specification\n\t\t\tnew FragmentAttributeProcessor(prefix, isomorphic),\n\n\t\t\t// Fragment removal\n\t\t\tnew RemoveAttributeProcessor(prefix, isomorphic),\n\n\t\t\t// Element processors\n\t\t\tnew BlockElementProcessor(prefix),\n\n\t\t\t// Misc\n\t\t\tnew XmlNsAttributeProcessor(prefix, isomorphic)\n\t\t];\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StandardDialect from './standard/StandardDialect.js';\n\n/**\n * Configuration object for the template engine.\n * \n * @typedef {Object} Configuration\n * @property {Array<Dialect>} dialects\n *   A list of dialects to include with this instance of the template engine.\n * @property {Object} [isomorphic]\n *   An object which configures the isomorphic capabilities of the template\n *   engine.\n * @property {Function} messageResolver\n *   A function for building a message string from some external source, given a\n *   message key and optional parameters for that particular message.\n * @property {Function} templateResolver\n *   A function for returning the text of templates named by fragment\n *   expressions in templates.  Is given only 1 argument, the template name from\n *   a fragment expression, and should return a Promise of the template text.\n */\n\n/**\n * Default configuration for the template engine, configures the standard\n * dialect with no options (uses `thjs` as the prefix).\n * \n * @type {Configuration}\n */\nexport const DEFAULT_CONFIGURATION = {\n\tdialects: [\n\t\tnew StandardDialect()\n\t]\n};\n\n/**\n * Standard configuration, configures the standard dialect with the `th` prefix\n * and enables isomorphic mode which enables the ability to use much of the same\n * processors across original Thymeleaf and ThymeleafJS.\n * \n * @type {Configuration}\n */\nexport const STANDARD_CONFIGURATION = {\n\t...DEFAULT_CONFIGURATION,\n\tdialects: [\n\t\tnew StandardDialect('th', {\n\t\t\tprefix: 'thjs'\n\t\t})\n\t]\n};\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from './AttributeProcessor.js';\nimport ElementProcessor   from './ElementProcessor.js';\n\n/**\n * Class for determining if an element contains a processor on it.\n * \n * @author Emanuel Rabina\n */\nexport default class Matcher {\n\n\t/**\n\t * Return the matching attribute or element that a processor can work over.\n\t * \n\t * @param {Element} element\n\t * @param {AttributeProcessor} processor\n\t * @return {String}\n\t *   A match result containing what was matched (either an attribute or an\n\t *   element, relevant to the processor being tested), or `null` if nothing\n\t *   was matched.\n\t */\n\tmatches(element, processor) {\n\n\t\tlet {isomorphic, name, prefix} = processor;\n\n\t\t// Attribute processor matching, can be of the name prefix:name or data-prefix-name\n\t\tif (processor instanceof AttributeProcessor) {\n\t\t\tlet prefixes = [prefix];\n\t\t\tif (isomorphic) {\n\t\t\t\tprefixes.unshift(isomorphic.prefix);\n\t\t\t}\n\t\t\tfor (let prefix of prefixes) {\n\t\t\t\tlet attribute;\n\t\t\t\tattribute = `${prefix}:${name}`;\n\t\t\t\tif (element.hasAttribute(attribute)) {\n\t\t\t\t\treturn attribute;\n\t\t\t\t}\n\t\t\t\tattribute = `data-${prefix}-${name}`;\n\t\t\t\tif (element.hasAttribute(attribute)) {\n\t\t\t\t\treturn attribute;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Element processor, can only be of the name prefix:name\n\t\telse if (processor instanceof ElementProcessor) {\n\t\t\tlet elementName = `${processor.prefix}:${name}`;\n\t\t\tif (element.tagName === elementName.toUpperCase()) {\n\t\t\t\treturn elementName;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Wrapper around the string being parsed, with a position that keeps track of\n * what part of the imput is currently being read/tested.\n * \n * @author Emanuel Rabina\n */\nexport default class InputBuffer {\n\n\t/**\n\t * @private\n\t * @type {Number}\n\t */\n\tposition = 0;\n\n\t/**\n\t * @private\n\t * @type {Array<Number>}\n\t */\n\tpositionStack = [];\n\n\t/**\n\t * @param {String} input\n\t */\n\tconstructor(input) {\n\n\t\tthis.input = input;\n\t}\n\n\t/**\n\t * Clear the previously {@link #mark}ed position.\n\t */\n\tclear() {\n\n\t\tlet lastPosition = this.positionStack.pop();\n\t\tif (lastPosition === undefined) {\n\t\t\tthrow new Error('Called clear() but no matching mark()');\n\t\t}\n\t}\n\n\t/**\n\t * Returns whether or not the current position is at the end of the input,\n\t * meaning we've exhausted the entire input string.\n\t * \n\t * @return {Boolean}\n\t */\n\texhausted() {\n\n\t\treturn this.position === this.input.length;\n\t}\n\n\t/**\n\t * Sets a mark at the current position so that it can be returned to by a\n\t * matching {@link #reset} call.\n\t */\n\tmark() {\n\n\t\tthis.positionStack.push(this.position);\n\t}\n\n\t/**\n\t * Convenience method for surrounding a function with a call to {@link #mark},\n\t * then {@link #clear} if the result of the function is non-null, or\n\t * {@link #reset} if `null`.\n\t * \n\t * @template T\n\t * @param {Function<T>} func\n\t * @return {T}\n\t */\n\tmarkAndClearOrReset(func) {\n\n\t\tthis.mark();\n\t\tlet result = func();\n\t\tif (result !== null) {\n\t\t\tthis.clear();\n\t\t\treturn result;\n\t\t}\n\t\tthis.reset();\n\t\treturn null;\n\t}\n\n\t/**\n\t * Reads as many characters from the current position as satisfies the given\n\t * pattern, returning the read characters and advancing the mark by as many\n\t * characters.\n\t * \n\t * @param {RegExp} pattern\n\t * @return {Array} The array of matched strings, or `null` if the pattern\n\t *   didn't match.\n\t */\n\tread(pattern) {\n\n\t\tlet remaining = this.input.substring(this.position);\n\t\tlet leadingWhitespace = remaining.match(/^\\s+/);\n\t\tif (leadingWhitespace) {\n\t\t\tleadingWhitespace = leadingWhitespace[0];\n\t\t\tremaining = remaining.substring(leadingWhitespace.length);\n\t\t}\n\t\tlet result = new RegExp(pattern.source).exec(remaining);\n\t\tif (result) {\n\t\t\tlet [value] = result;\n\t\t\tif (remaining.startsWith(value)) {\n\t\t\t\tthis.position += (value.length + (leadingWhitespace ? leadingWhitespace.length : 0));\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Revert to the last @{link #mark}ed position.\n\t */\n\treset() {\n\n\t\tlet newPosition = this.positionStack.pop();\n\t\tif (newPosition === undefined) {\n\t\t\tthrow new Error('Called reset() but no matching mark()');\n\t\t}\n\t\tthis.position = newPosition;\n\t}\n}\n","/*\n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport InputBuffer from './InputBuffer';\n\n/**\n * Any one of the objects that can be matched:\n *  - an expression function\n *  - a string that references another rule\n *  - a regular expression\n * \n * @typedef {String|RegExp|Function} Matchable\n */\n\n/**\n * A recursive descent parser for any parsing expression grammar defined by the\n * constructs in this module.\n * \n * TODO: Own module?\n * \n * @author Emanuel Rabina\n */\nexport default class Parser {\n\n\texpressionStack = [];\n\n\t/**\n\t * @param {Grammar} grammar\n\t */\n\tconstructor(grammar) {\n\n\t\tthis.grammar = grammar;\n\t}\n\n\t/**\n\t * Parse a string, attempting to build the parse tree defined by the rules in\n\t * the configured grammar.  Parsing is considered successful when there are no\n\t * more non-terminating symbols in the grammar and all of the input has been\n\t * read.\n\t * \n\t * @param {String} input\n\t * @return {Object} The parse tree if the input could be parsed, `null`\n\t *   otherwise.\n\t */\n\tparse(input) {\n\n\t\tlet inputBuffer = new InputBuffer(input);\n\t\tlet matchResult = this.grammar.accept(inputBuffer, this);\n\t\tif (matchResult === null || !inputBuffer.exhausted()) {\n\t\t\tlet errorMessage = `Failed to parse \"${input}\"`;\n\n\t\t\t// Don't bring down the thread if we can't parse\n\t\t\tif (process.env.NODE_ENV === 'production') {\n\t\t\t\tconsole.error(errorMessage);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new Error(errorMessage);\n\t\t\t}\n\t\t}\n\t\treturn matchResult;\n\t}\n\n\t/**\n\t * Parse the input against the given expression.  An expression can either be\n\t * a reference to another rule in the current grammar, or a regular expression\n\t * that consumes input.\n\t * \n\t * @param {InputBuffer} input\n\t * @param {Matchable} expression\n\t * @return {Object}\n\t */\n\tparseWithExpression(input, expression) {\n\n\t\t// Name of another rule in the grammar\n\t\tif (typeof expression === 'string') {\n\t\t\tlet rule = this.grammar.findRuleByName(expression);\n\t\t\treturn rule ? rule.accept(input, this) : null;\n\t\t}\n\n\t\t// A regular expression that must be matched\n\t\telse if (expression instanceof RegExp) {\n\t\t\tlet result = input.read(expression);\n\t\t\tif (result) {\n\t\t\t\treturn result[0];\n\t\t\t}\n\t\t}\n\n\t\t// An expression function to be executed\n\t\telse if (typeof expression === 'function') {\n\t\t\treturn expression(input, this);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Surrounds a function that evaluates an expression with tracking it against\n\t * the current stack.  Useful for knowing how the current expression was\n\t * arrived at through the grammar's rules.\n\t * \n\t * @template T\n\t * @param {InputBuffer} input\n\t * @param {Matchable} expression\n\t * @param {String} name\n\t * @param {Function<T>} func\n\t * @return {T}\n\t */\n\ttrackExpression(input, expression, name, func) {\n\n\t\tlet stackSize = this.expressionStack.push({\n\t\t\tname,\n\t\t\texpression: typeof expression !== 'function' ? expression.toString() : null,\n\t\t\tinput: input.input.substring(input.position)\n\t\t});\n\t\tlet result = func();\n\t\tif (result !== null) {\n\t\t\treturn result;\n\t\t}\n\t\tthis.expressionStack.splice(stackSize - 1);\n\t\treturn null;\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Parser from '../../parser/Parser.js';\n\n/**\n * Parses and executes Thymeleaf expressions.\n * \n * TODO: Create a shared instance of this for a processing context so that it\n *       doesn't need to be recreated over and over.\n * \n * @author Emanuel Rabina\n */\nexport default class ExpressionProcessor {\n\n\t/**\n\t * Constructor, create a new processor that can parse/execute a string in the\n\t * given grammar.\n\t * \n\t * @param {Grammar} grammar\n\t */\n\tconstructor(grammar) {\n\n\t\tthis.parser = new Parser(grammar);\n\t}\n\n\t/**\n\t * Parse and execute the given input as a Thymeleaf expression.\n\t * \n\t * @param {String} input\n\t * @param {Object} [context={}]\n\t * @return {*}\n\t */\n\tprocess(input, context = {}) {\n\n\t\tlet expression = this.parser.parse(input);\n\t\treturn expression?.({\n\t\t\t...context,\n\t\t\texpression: input\n\t\t});\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A special kind of expression that requires the referenced rule consume all\n * available input.\n * \n * @param {String} ruleName\n * @return {Matchable}\n */\nexport const AllInput = ruleName => (input, parser) => {\n\tlet matchResult = parser.parseWithExpression(input, ruleName);\n\treturn matchResult !== null && input.exhausted() ? matchResult : null;\n};\n","/*\n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Default processor which returns the result as is.\n * \n * @template T\n * @param {T} result\n * @return {T}\n */\nconst defaultMatchProcessor = result => result;\n\n/**\n * A rule describes a string in the language.\n * \n * @author Emanuel Rabina\n */\nexport default class Rule {\n\n\t/**\n\t * @param {String} name\n\t * @param {Object} expression\n\t * @param {Function} [matchProcessor=defaultMatchProcessor]\n\t */\n\tconstructor(name, expression, matchProcessor = defaultMatchProcessor) {\n\n\t\tthis.name           = name;\n\t\tthis.expression     = expression;\n\t\tthis.matchProcessor = matchProcessor;\n\t}\n\n\t/**\n\t * Given an input string and a parser, return whether or not the input is\n\t * accepted by this rule.\n\t * \n\t * @param {InputBuffer} input\n\t * @param {Parser} parser\n\t * @return {Object} If the input is accepted, this will be the non-null result\n\t *   of matching against the rule.\n\t */\n\taccept(input, parser) {\n\n\t\tlet {expression, name} = this;\n\t\treturn parser.trackExpression(input, expression, name, () => {\n\t\t\tlet matchResult = parser.parseWithExpression(input, expression);\n\t\t\treturn matchResult !== null ? this.matchProcessor(matchResult) : null;\n\t\t});\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Rule from '../../parser/Rule';\n\n/**\n * A custom rule where the default match processor returns a function to execute\n * against the current context to discover the matched value.\n */\nexport default class ThymeleafRule extends Rule {\n\n\t/**\n\t * @param {String} name\n\t * @param {Object} expression\n\t * @param {Function} [matchProcessor]\n\t */\n\tconstructor(name, expression, matchProcessor) {\n\n\t\tconst contextSensitiveMatchProcessor = result => (...args) => {\n\t\t\t// console.log(`Processing rule: ${name}`);\n\t\t\treturn typeof result === 'function' ? result.apply(null, args) : result;\n\t\t};\n\t\tsuper(name, expression, matchProcessor || contextSensitiveMatchProcessor);\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A collection of Rules that describes a language.\n * \n * @author Emanuel Rabina\n */\nexport default class Grammar {\n\n\t/**\n\t * @param {String} name\n\t * @param {Rule} startingRule\n\t * @param {...Rule} additionalRules\n\t */\n\tconstructor(name, startingRule, ...additionalRules) {\n\n\t\tthis.name = name;\n\t\tthis.rules = [].concat(startingRule, additionalRules);\n\t}\n\n\t/**\n\t * Given an input string and a parser, return whether or not the input is\n\t * accepted by this grammar.\n\t * \n\t * @param {InputBuffer} input\n\t * @param {Parser} parser\n\t * @return {Object} If the input is accepted, this will be the non-null result\n\t *   of matching against the rules of this grammar.\n\t */\n\taccept(input, parser) {\n\n\t\treturn this.startingRule.accept(input, parser);\n\t}\n\n\t/**\n\t * Return the rule that has the given name.\n\t * \n\t * @param {String} name\n\t * @return {Rule}\n\t */\n\tfindRuleByName(name) {\n\n\t\tlet rule = this.rules.find(rule => rule.name === name);\n\t\tif (!rule) {\n\t\t\tthrow new Error(`Failed to find a rule named \"${name}\" in the grammar`);\n\t\t}\n\t\treturn rule;\n\t}\n\n\t/**\n\t * Returns the grammar's starting rule.\n\t * \n\t * @return {Rule}\n\t */\n\tget startingRule() {\n\n\t\treturn this.rules[0];\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns an expression function where the underlying expression doesn't need\n * to be matched.  Thus, optional expressions \"always\" match.\n * \n * @param {Matchable} expression\n * @return {Matchable}\n */\nexport const Optional = expression => (input, parser) => {\n\treturn input.markAndClearOrReset(() => {\n\t\tlet result = parser.parseWithExpression(input, expression);\n\t\treturn result !== null ? result : '';\n\t});\n};\n\n/**\n * Returns an expression function where the expression must be matched against\n * at least once to be considered a match.\n * \n * @param {Matchable} expression\n * @return {Matchable}\n */\nexport const OneOrMore = (expression) => (input, parser) => {\n\treturn input.markAndClearOrReset(() => {\n\t\tlet results = [];\n\t\twhile (true) {\n\t\t\tlet result = input.markAndClearOrReset(() => {\n\t\t\t\treturn parser.parseWithExpression(input, expression);\n\t\t\t});\n\t\t\tif (result) {\n\t\t\t\tresults.push(result);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn results.length > 0 ? results : null;\n\t});\n};\n\n/**\n * Returns an expression function where only one of the underlying expressions\n * must be matched in order to consider the expression a match.\n * \n * @param {...Matchable} expressions\n * @return {Matchable}\n */\nexport const OrderedChoice = (...expressions) => (input, parser) => {\n\treturn input.markAndClearOrReset(() => {\n\t\tfor (let expression of expressions) {\n\t\t\tlet result = input.markAndClearOrReset(() => {\n\t\t\t\treturn parser.parseWithExpression(input, expression);\n\t\t\t});\n\t\t\tif (result !== null) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t});\n};\n\n/**\n * Returns an expression whose underlying expressions must be matched in order\n * to consider the entire expression a match.\n * \n * @param {...Matchable} expressions\n * @return {Matchable}\n */\nexport const Sequence = (...expressions) => (input, parser) => {\n\treturn input.markAndClearOrReset(() => {\n\t\tlet results = [];\n\t\tfor (let expression of expressions) {\n\t\t\tlet result = input.markAndClearOrReset(() => {\n\t\t\t\treturn parser.parseWithExpression(input, expression);\n\t\t\t});\n\t\t\tif (result === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tresults.push(result);\n\t\t}\n\t\treturn results;\n\t});\n};\n\n/**\n * Returns an expression function where the expression can be matched a repeated\n * number of times or none at all to be considered a match.\n * \n * @param {Matchable} expression\n * @return {Matchable}\n */\nexport const ZeroOrMore = (expression) => (input, parser) => {\n\treturn input.markAndClearOrReset(() => {\n\t\tlet results = [];\n\t\twhile (true) {\n\t\t\tlet result = input.markAndClearOrReset(() => {\n\t\t\t\treturn parser.parseWithExpression(input, expression);\n\t\t\t});\n\t\t\tif (result) {\n\t\t\t\tresults.push(result);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t});\n};\n","/* \n * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AllInput}                       from './AllInput.js';\nimport ThymeleafRule                    from './ThymeleafRule.js';\nimport Grammar                          from '../../parser/Grammar.js';\nimport {Optional, Sequence, ZeroOrMore} from '../../parser/Operators.js';\n\nimport {flatten} from '@ultraq/array-utils';\n\n/**\n * Grammar for Thymeleaf fragment signatures.  This is separate from the\n * expression language as these are not expressions, but rather marker syntaxes.\n * \n * @author Emanuel Rabina\n */\nexport default new Grammar('Thymeleaf fragment signature',\n\n\tnew ThymeleafRule('ThymeleafFragmentSignatureRule',\n\t\tAllInput('FragmentSignature')\n\t),\n\n\t/**\n\t * The target end of a fragment expression, contains the fragment name and\n\t * optional parameter names.\n\t */\n\tnew ThymeleafRule('FragmentSignature',\n\t\tSequence('FragmentName', Optional('FragmentParameters')),\n\t\t([fragmentName, parameterNames]) => context => {\n\t\t\treturn {\n\t\t\t\tfragmentName: fragmentName(context),\n\t\t\t\tparameterNames: parameterNames ? parameterNames(context) : null\n\t\t\t};\n\t\t}\n\t),\n\tnew ThymeleafRule('FragmentName', /[\\w-._]+/),\n\tnew ThymeleafRule('FragmentParameters',\n\t\tSequence(/\\(/, ZeroOrMore('FragmentParameterNames'), /\\)/),\n\t\t([, [parameterNames]]) => context => {\n\t\t\treturn parameterNames(context);\n\t\t}\n\t),\n\tnew ThymeleafRule('FragmentParameterNames',\n\t\tSequence('Identifier', ZeroOrMore(Sequence(/,/, 'Identifier'))),\n\t\t(namesAndSeparators) => context => {\n\t\t\treturn namesAndSeparators ?\n\t\t\t\tflatten(namesAndSeparators)\n\t\t\t\t\t.filter(item => item !== ',')\n\t\t\t\t\t.map(name => name(context)) :\n\t\t\t\t[];\n\t\t}\n\t),\n\n\n\t// Common language basics\n\t// ======================\n\n\tnew ThymeleafRule('Identifier', /[#a-zA-Z_][\\w]*/)\n);\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport InputBuffer from './InputBuffer';\n\n/**\n * A special kind of expression that understands matched portions of regular\n * expressions to run processing over, which may lead to additional parsing\n * expressions.\n * \n * This expression should be used sparingly as the regexes within need to take\n * care of whitespace between tokens themselves, which can be annoying.\n * \n * @param {RegExp} expression\n * @param {Array<Matchable>} matchers\n * @return {Matchable}\n */\nexport const RegularExpression = (expression, matchers) => (input, parser) => {\n\treturn input.markAndClearOrReset(() => {\n\t\tlet result = input.read(expression);\n\t\tif (result) {\n\t\t\tlet parseResults = [result[0]];\n\t\t\tfor (let i = 1; i < result.length; i++) {\n\t\t\t\tlet match = result[i];\n\t\t\t\tif (match !== undefined) {\n\t\t\t\t\tlet parseResult = parser.parseWithExpression(new InputBuffer(match), matchers[i - 1]);\n\t\t\t\t\tif (parseResult === null) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tparseResults.push(parseResult);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn parseResults;\n\t\t}\n\t\treturn null;\n\t});\n};\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AllInput}          from './AllInput.js';\nimport ExpressionProcessor from './ExpressionProcessor.js';\nimport ThymeleafRule       from './ThymeleafRule.js';\nimport Grammar             from '../../parser/Grammar.js';\nimport {\n\tOptional,\n\tOneOrMore,\n\tOrderedChoice,\n\tSequence,\n\tZeroOrMore\n}                          from '../../parser/Operators.js';\nimport {RegularExpression} from '../../parser/RegularExpression.js';\n\nimport {flatten, remove} from '@ultraq/array-utils';\n\n// For helping identify rules that return objects\nconst METADATA_FRAGMENT  = 'fragment';\nconst METADATA_ITERATION = 'iteration';\nconst METADATA_MESSAGE   = 'message';\n\n/**\n * Grammar for the Thymeleaf expression language.  Describes the language and\n * how to parse it.\n * \n * @author Emanuel Rabina\n */\nconst ThymeleafExpressionLanguage = new Grammar('Thymeleaf Expression Language',\n\n\t// Ordered as at https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html#standard-expression-syntax\n\tnew ThymeleafRule('ThymeleafExpression',\n\t\tOrderedChoice(\n\t\t\tAllInput('VariableExpression'),\n\t\t\tAllInput('MessageExpression'),\n\t\t\tAllInput('LinkExpression'),\n\t\t\tAllInput('FragmentExpression'),\n\t\t\tAllInput('Iteration'),\n\t\t\tAllInput('StringConcatenation'),\n\t\t\tAllInput('ScopedVariables'),\n\t\t\tAllInput('Literal'),\n\t\t\tAllInput('LogicalExpression'),\n\t\t\tAllInput('IfThenCondition'),\n\t\t\tAllInput('IfThenElseCondition'),\n\t\t\tAllInput('TokenLiteral'),\n\t\t\tAllInput('Nothing')\n\t\t)\n\t),\n\n\n\t// Simple expressions\n\t// ==================\n\n\t/**\n\t * Variable expressions, `${variable}`.  Represents a value to be retrieved\n\t * from the current context.  Also is an entry into the underlying expression\n\t * language, so this part often extends to do what OGNL (and thus SpEL) can\n\t * do.\n\t */\n\tnew ThymeleafRule('VariableExpression',\n\t\tSequence(/\\${/, 'Chain', /\\}/),\n\t\t([, chain]) => context => {\n\t\t\tlet result = chain(context);\n\t\t\treturn result !== null && result !== undefined ? result : '';\n\t\t}\n\t),\n\tnew ThymeleafRule('Chain',\n\t\tSequence(Optional('Negation'), 'ChainLink', ZeroOrMore(Sequence(/\\./, 'ChainLink'))),\n\t\t([negation, ...chain]) => context => {\n\t\t\tlet result = flatten(chain).filter(link => link !== '.').reduce((linkContext, nextLink) => {\n\t\t\t\tif (linkContext === null || linkContext === undefined) {\n\t\t\t\t\treturn linkContext;\n\t\t\t\t}\n\t\t\t\treturn nextLink(linkContext, context);\n\t\t\t}, context);\n\t\t\treturn typeof negation === 'function' ? !result : result;\n\t\t}\n\t),\n\tnew ThymeleafRule('ChainLink',\n\t\tOrderedChoice('MethodCall', 'PropertyName', 'Literal')\n\t),\n\tnew ThymeleafRule('Negation', /!/),\n\n\t/**\n\t * Message expressions, `#{messageKey(parameters)}`.  Used for referencing\n\t * text from a resource file, often for localization purposes.\n\t */\n\tnew ThymeleafRule('MessageExpression',\n\t\tSequence(/#{/, 'MessageKey', Optional(Sequence(/\\(/, Sequence('Expression', ZeroOrMore(Sequence(/,/, 'Expression'))), /\\)/)), /}/),\n\t\t([, messageKey, [, messageParameters]]) => context => {\n\t\t\treturn {\n\t\t\t\ttype: METADATA_MESSAGE,\n\t\t\t\tkey: messageKey(context),\n\t\t\t\tparameters: messageParameters ?\n\t\t\t\t\tflatten(messageParameters)\n\t\t\t\t\t\t.filter(messageParameter => typeof messageParameter === 'function')\n\t\t\t\t\t\t.map(messageParameter => messageParameter(context)) :\n\t\t\t\t\tnull\n\t\t\t};\n\t\t}\n\t),\n\tnew ThymeleafRule('MessageKey', /[\\w.-]+/),\n\n\t/**\n\t * Link expressions, `@{url(parameters)}`.  Used for generating URLs out of\n\t * context parameters.\n\t * \n\t * TODO: Change this to use the other expression types so I can remove this\n\t *       bespoke operator.\n\t */\n\tnew ThymeleafRule('LinkExpression',\n\t\tRegularExpression(/^@\\{(.+?)(\\(.+\\))?\\}$/, ['Url', 'UrlParameters']),\n\t\t([, urlFunc, parameters]) => context => {\n\n\t\t\tlet url = urlFunc(context);\n\t\t\tif (parameters) {\n\n\t\t\t\t// TODO: Push this parsing of the parameters list back into the grammar\n\t\t\t\tlet expressionProcessor = new ExpressionProcessor(ThymeleafExpressionLanguage);\n\t\t\t\tlet paramsList = parameters(context).slice(1, -1).split(',').map(param => {\n\t\t\t\t\tlet [lhs, rhs] = param.split('=');\n\t\t\t\t\treturn [lhs, expressionProcessor.process(rhs, context)];\n\t\t\t\t});\n\n\t\t\t\t// Fill out any placeholders in the URL from the parameters\n\t\t\t\twhile (true) { // eslint-disable-line\n\t\t\t\t\tlet urlTemplate = /(.*?)\\{(.+?)\\}(.*)/.exec(url);\n\t\t\t\t\tif (urlTemplate) {\n\t\t\t\t\t\tlet [, head, placeholder, tail] = urlTemplate;\n\t\t\t\t\t\tlet paramEntry = remove(paramsList, ([lhs]) => lhs === placeholder);\n\t\t\t\t\t\tif (paramEntry) {\n\t\t\t\t\t\t\turl = `${head}${paramEntry[1]}${tail}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Remaining parameters become search query parameters\n\t\t\t\tif (paramsList.length) {\n\t\t\t\t\turl += `?${paramsList.map(([key, value]) => `${key}=${value}`).join('&')}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn url;\n\t\t}\n\t),\n\tnew ThymeleafRule('Url', /.+/),\n\tnew ThymeleafRule('UrlParameters', /\\((.+)\\)/),\n\n\t/**\n\t * Fragment expressions, `~{template :: fragment(parameters)}`.  A locator for\n\t * a piece of HTML in the same or another template.\n\t */\n\tnew ThymeleafRule('FragmentExpression',\n\t\tSequence(/~{/, 'TemplateName', /::/, 'FragmentName', Optional('FragmentParametersSection'), /}/),\n\t\t([, templateName, , fragmentName, parameters]) => context => {\n\n\t\t\t// TODO: Should executing a fragment expression locate and return the\n\t\t\t//       fragment?  If so, then it'll make expression execution\n\t\t\t//       asynchronous!\n\t\t\treturn {\n\t\t\t\ttype: METADATA_FRAGMENT,\n\t\t\t\ttemplateName: templateName(context),\n\t\t\t\tfragmentName: fragmentName(context),\n\t\t\t\tparameters: parameters ? parameters(context) : null\n\t\t\t};\n\t\t}\n\t),\n\tnew ThymeleafRule('TemplateName',\n\t\tOrderedChoice(\n\t\t\t/[\\w-._/]+/,\n\t\t\t'VariableExpression'\n\t\t)\n\t),\n\tnew ThymeleafRule('FragmentName', /[\\w-._]+/),\n\tnew ThymeleafRule('FragmentParametersSection',\n\t\tSequence(/\\(/, Optional('FragmentParameters'), /\\)/),\n\t\t([, parameters]) => context => {\n\t\t\treturn parameters(context);\n\t\t}\n\t),\n\tnew ThymeleafRule('FragmentParameters',\n\t\tSequence('Expression', ZeroOrMore(Sequence(/,/, 'Expression'))),\n\t\t(expressionsAndSeparators) => context => {\n\t\t\treturn expressionsAndSeparators ?\n\t\t\t\tflatten(expressionsAndSeparators)\n\t\t\t\t\t.filter(item => item !== ',')\n\t\t\t\t\t.map(expressions => expressions(context)) :\n\t\t\t\t[];\n\t\t}\n\t),\n\n\n\t// Complex expressions\n\t// ===================\n\n\t/**\n\t * Iteration, `localVar : ${collection}`.  The name of the variable for each\n\t * loop, followed by the collection being iterated over.\n\t */\n\tnew ThymeleafRule('Iteration',\n\t\tSequence('Identifier', Optional(Sequence(/,/, 'Identifier')), /:/, 'VariableExpression'),\n\t\t([localValueName, [, iterationStatusVariable], , collectionExpressionAction]) => context => ({\n\t\t\ttype: METADATA_ITERATION,\n\t\t\tlocalValueName: localValueName(context),\n\t\t\titerable: collectionExpressionAction(context),\n\t\t\titerationStatusVariable: iterationStatusVariable ? iterationStatusVariable(context) : null\n\t\t})\n\t),\n\n\t/**\n\t * String concatenation, `'...' + '...'` or even `${...} + ${...}`, the\n\t * joining of 2 expressions by way of the `+` operator.\n\t */\n\tnew ThymeleafRule('StringConcatenation',\n\t\tSequence('Concatenatable', OneOrMore(Sequence(/\\+/, 'Concatenatable'))),\n\t\t(values) => context => {\n\t\t\treturn flatten(values).filter(item => item !== '+').reduce((result, value) => {\n\t\t\t\treturn result + (typeof value === 'function' ? value(context) : value);\n\t\t\t}, '');\n\t\t}\n\t),\n\tnew ThymeleafRule('Concatenatable',\n\t\tOrderedChoice(\n\t\t\t'StringLiteral',\n\t\t\t'VariableExpression'\n\t\t)\n\t),\n\n\t/**\n\t * Scoped variable aliases, `key=${expression},...`, describes one or more\n\t * names for scoped variables with the expressions that can be their values.\n\t */\n\tnew ThymeleafRule('ScopedVariables',\n\t\tSequence('ScopedVariable', ZeroOrMore(Sequence(/,/, 'ScopedVariable'))),\n\t\t(aliases) => context => {\n\t\t\treturn flatten(aliases).map(alias => alias(context));\n\t\t}\n\t),\n\tnew ThymeleafRule('ScopedVariable',\n\t\tSequence('Identifier', /=/, 'Expression'),\n\t\t([name, , expression]) => context => ({\n\t\t\tname: name(context),\n\t\t\tvalue: expression(context)\n\t\t})\n\t),\n\n\t// Literals\n\t// ========\n\n\tnew ThymeleafRule('Literal',\n\t\tOrderedChoice(\n\t\t\t'StringLiteral',\n\t\t\t'NumberLiteral',\n\t\t\t'BooleanLiteral',\n\t\t\t'NullLiteral'\n\t\t)\n\t),\n\n\t/**\n\t * String literal, characters surrounded by `'` (single quotes).\n\t * \n\t * This is trying to emulate negative lookbehind so that escaped quotes don't\n\t * get counted as string terminators, but JavaScript only got that feature in\n\t * ES2018, so if I used it it'd leave too many JS engines without support.\n\t */\n\tnew ThymeleafRule('StringLiteral', /'.*?(?!\\\\').'/, result => () => result.slice(1, -1).replace(/\\\\/g, '')),\n\n\t/**\n\t * A number.\n\t */\n\tnew ThymeleafRule('NumberLiteral', /\\d+(\\.\\d+)?/, result => () => parseFloat(result)),\n\n\t/**\n\t * One of `true` or `false`.\n\t */\n\tnew ThymeleafRule('BooleanLiteral', /(true|false)/, result => () => result === 'true'),\n\n\t/**\n\t * The word `null` to represent the null value.\n\t */\n\t// TODO: The parser uses null to mean 'failed parse', so this might not work?\n\tnew ThymeleafRule('NullLiteral', /null/, () => () => null),\n\n\t/**\n\t * A token literal, which is pretty much anything else that can't be categorized\n\t * by the other literal types.  This is often used as a fallback in the\n\t * expression language so that, for any unknown input, we're still returning\n\t * something.\n\t */\n\tnew ThymeleafRule('TokenLiteral', /[^: ${}]+/, result => () => result),\n\n\n\t// Text operations\n\t// ===============\n\n\n\t// Arithmetic operations\n\t// =====================\n\n\n\t// Boolean operations\n\t// ==================\n\n\n\t// Comparisons and equality\n\t// ========================\n\n\t/**\n\t * A logical expression is any expression that resolves to a `true`/`false`\n\t * value.\n\t */\n\tnew ThymeleafRule('LogicalExpression',\n\t\tSequence('Expression', 'Comparator', 'Expression'),\n\t\t([leftOperand, comparator, rightOperand]) => context => {\n\t\t\tlet lhs = leftOperand(context);\n\t\t\tlet rhs = rightOperand(context);\n\t\t\tswitch (comparator(context)) {\n\t\t\t\tcase '==':  return lhs == rhs; // eslint-disable-line\n\t\t\t\tcase '===': return lhs === rhs;\n\t\t\t\tcase '!=':  return lhs != rhs; // eslint-disable-line\n\t\t\t\tcase '!==': return lhs !== rhs;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t),\n\tnew ThymeleafRule('Comparator',\n\t\tOrderedChoice(\n\t\t\t/[=!]==?/\n\t\t)\n\t),\n\n\n\t// Conditional operators\n\t// =====================\n\n\t/**\n\t * If-then condition, `if ? then`.  This is the truthy branch only of the\n\t * classic ternary operator.  The falsey branch is a no-op.\n\t */\n\tnew ThymeleafRule('IfThenCondition',\n\t\tSequence('Condition', /\\?/, 'Expression'),\n\t\t([condition, , truthyExpression]) => context => {\n\t\t\treturn condition(context) ? truthyExpression(context) : undefined;\n\t\t}\n\t),\n\n\t/**\n\t * If-then-else condition, `if ? then : else`, the classic ternary operator.\n\t */\n\tnew ThymeleafRule('IfThenElseCondition',\n\t\tSequence('Condition', /\\?/, 'Expression', /:/, 'Expression'),\n\t\t([condition, , truthyExpression, , falseyExpression]) => context => {\n\t\t\treturn condition(context) ? truthyExpression(context) : falseyExpression(context);\n\t\t}\n\t),\n\n\t/**\n\t * A condition is some expression or value that resolves to a true/false\n\t * value.\n\t */\n\tnew ThymeleafRule('Condition',\n\t\tOrderedChoice(\n\t\t\t'LogicalExpression',\n\t\t\t'Expression'\n\t\t)\n\t),\n\n\n\t// Special tokens\n\t// ==============\n\n\t/**\n\t * An expression that matches the empty string.\n\t */\n\tnew ThymeleafRule('Nothing', /^$/),\n\n\n\t// Common language basics\n\t// ======================\n\n\tnew ThymeleafRule('Identifier', /[#a-zA-Z_][\\w]*/),\n\tnew ThymeleafRule('PropertyName', 'Identifier',\n\t\t(propertyName) => context => {\n\t\t\tlet property = propertyName(context);\n\t\t\treturn Object.prototype.hasOwnProperty.call(context, property) ? context[property] : '';\n\t\t}\n\t),\n\tnew ThymeleafRule('MethodCall',\n\t\tSequence('MethodName', /\\(/, Optional('MethodParameters'), /\\)/),\n\t\t([name, , parameters]) => (context, parameterContext) => {\n\t\t\tlet methodName = name(context);\n\t\t\tlet method = context[methodName];\n\t\t\tif (!method) {\n\t\t\t\tconsole.warn(`No method '${methodName}' present on the current context.  Expression: ${context.expression}`);\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn method.apply(context, parameters(parameterContext || context));\n\t\t}\n\t),\n\tnew ThymeleafRule('MethodName', 'Identifier'),\n\tnew ThymeleafRule('MethodParameters',\n\t\tSequence('Chain', ZeroOrMore(Sequence(/,/, 'Chain'))),\n\t\t(parametersAndSeparators) => context => {\n\t\t\treturn parametersAndSeparators ?\n\t\t\t\tflatten(parametersAndSeparators)\n\t\t\t\t\t.filter(item => item !== ',')\n\t\t\t\t\t.map(parameter => parameter(context)) :\n\t\t\t\t[];\n\t\t}\n\t),\n\n\t/**\n\t * Any valid unit of code that resolves to some value.\n\t */\n\tnew ThymeleafRule('Expression',\n\t\tOrderedChoice(\n\t\t\t'VariableExpression',\n\t\t\t'StringConcatenation',\n\t\t\t'Literal'\n\t\t)\n\t)\n);\n\nexport default ThymeleafExpressionLanguage;\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Convert a standard node callback-style function into a function that returns\n * a Promise.\n * \n * @param {Function} func\n * @return {Function}\n */\nexport function promisify(func) {\n\treturn function() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tfunc(...arguments, (error, result) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(new Error(result));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DEFAULT_CONFIGURATION}     from './Configurations.js';\nimport AttributeProcessor          from './processors/AttributeProcessor.js';\nimport ElementProcessor            from './processors/ElementProcessor.js';\nimport Matcher                     from './processors/Matcher.js';\nimport ExpressionProcessor         from './standard/expressions/ExpressionProcessor.js';\nimport FragmentSignatureGrammar    from './standard/expressions/FragmentSignatureGrammar.js';\nimport ThymeleafExpressionLanguage from './standard/expressions/ThymeleafExpressionLanguage.js';\nimport {deserialize, serialize}    from './utilities/Dom.js';\nimport {promisify}                 from './utilities/Functions.js';\n\nimport {readFile} from 'fs';\n\n/**\n * A highly-configurable class responsible for processing the Thymeleaf\n * directives found in HTML documents and fragments.\n * \n * @author Emanuel Rabina\n */\nexport default class TemplateEngine {\n\n\t/**\n\t * Constructor, set up a new template engine instance.\n\t * \n\t * @param {Object} [config=DEFAULT_CONFIGURATION]\n\t */\n\tconstructor({dialects, messageResolver, templateResolver} = DEFAULT_CONFIGURATION) {\n\n\t\tthis.messageResolver  = messageResolver;\n\t\tthis.templateResolver = templateResolver;\n\t\tthis.expressionProcessor = new ExpressionProcessor(ThymeleafExpressionLanguage);\n\t\tthis.fragmentSignatureProcessor = new ExpressionProcessor(FragmentSignatureGrammar);\n\n\t\t// Combine all processors into a unified list\n\t\tthis.processors = dialects.reduce((acc, {processors}) => processors ? [\n\t\t\t...acc,\n\t\t\t...processors\n\t\t] : acc, []);\n\n\t\t// Combine all expression objects into a unified object\n\t\tthis.expressionObjects = dialects.reduce((acc, {expressionObjects}) => expressionObjects ? {\n\t\t\t...acc,\n\t\t\t...expressionObjects\n\t\t} : acc, {});\n\t}\n\n\t/**\n\t * Process the Thymeleaf template data, returning the processed template.\n\t *\n\t * @param {String} template\n\t * @param {Object} [context={}]\n\t * @return {Promise<String>}\n\t *   A promise resolved with the processed template, or rejected with an error\n\t *   message.\n\t */\n\tprocess(template, context = {}) {\n\n\t\tlet documentFragment = deserialize(template);\n\t\tlet rootElement = documentFragment.firstElementChild;\n\t\treturn this.processNode(rootElement, {\n\t\t\t...context,\n\t\t\t...this.expressionObjects,\n\t\t\t// TODO: Is there some way to make these things a dependency of the\n\t\t\t//       processors that need them?  Otherwise it feels like passing\n\t\t\t//       dependencies as part of the context object 🤔\n\t\t\texpressionProcessor: this.expressionProcessor,\n\t\t\tfragmentSignatureProcessor: this.fragmentSignatureProcessor,\n\t\t\tmessageResolver:  this.messageResolver,\n\t\t\ttemplateResolver: this.templateResolver\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn serialize(documentFragment);\n\t\t\t});\n\t}\n\n\t/**\n\t * Process the Thymeleaf template at the given path, returning a promise of\n\t * the processed template.\n\t * \n\t * @param {String} filePath\n\t * @param {Object} [context={}]\n\t * @return {Promise<String>}\n\t *   A promise of the processed template.  The promise is immediately rejected\n\t *   if this method is called in a browser environment.\n\t */\n\tprocessFile(filePath, context = {}) {\n\n\t\t/* global ENVIRONMENT */\n\t\treturn ENVIRONMENT === 'browser' ?\n\t\t\tPromise.reject(new Error('Cannot use TemplateEngine.processFile() inside a browser')) :\n\t\t\tpromisify(readFile)(filePath)\n\t\t\t\t.then(data => {\n\t\t\t\t\treturn this.process(data, context);\n\t\t\t\t});\n\t}\n\n\t/**\n\t * Process a DOM element.\n\t * \n\t * @private\n\t * @param {Element} element\n\t * @param {Object} [context={}]\n\t * @return {Promise<Boolean>} Whether or not the parent node needs\n\t *   reprocessing.\n\t */\n\tasync processNode(element, context = {}) {\n\n\t\tlet localVariables = element.__thymeleafLocalVariables || {};\n\t\tlet localContext = {\n\t\t\t...context,\n\t\t\t...localVariables\n\t\t};\n\t\tlet matcher = new Matcher();\n\n\t\t// Run the current element through the gamut of registered processors.  If\n\t\t// one of them sends a reprocessing signal, return from this method to let\n\t\t// the caller re-run everything.\n\t\tfor (let i = 0; i < this.processors.length; i++) {\n\t\t\tlet processor = this.processors[i];\n\t\t\tlet processorResult = false;\n\n\t\t\tlet match = matcher.matches(element, processor);\n\t\t\tif (match) {\n\t\t\t\tif (processor instanceof AttributeProcessor) {\n\t\t\t\t\tprocessorResult = await processor.process(element, match,\n\t\t\t\t\t\telement.getAttribute(match), localContext);\n\t\t\t\t}\n\t\t\t\telse if (processor instanceof ElementProcessor) {\n\t\t\t\t\tprocessorResult = await processor.process(element, localContext);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (processorResult) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Process this element's children, handling the reprocessing signal to\n\t\t// re-run the 'current' child element (could have been shifted due to being\n\t\t// removed etc).\n\t\tfor (let i = 0; i < element.children.length; ) {\n\t\t\tlet child = element.children[i];\n\t\t\tlet reprocess = await this.processNode(child, localContext);\n\t\t\tif (!reprocess) {\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n}\n"],"names":["AttributeProcessor","constructor","prefix","name","isomorphic","process","element","attribute","attributeValue","context","removeAttribute","NAME","AttrAttributeProcessor","test","split","forEach","attributeParts","setAttribute","escapeHtml","expressionProcessor","env","NODE_ENV","console","warn","ElementProcessor","NODE_TYPE_DOCUMENT_TYPE","NODE_TYPE_ELEMENT","getThymeleafAttributeValue","processorName","getAttribute","deserialize","htmlString","JSDOM","window","document","serialize","documentFragment","result","firstChild","firstElementChild","nodeType","outerHTML","BlockElementProcessor","parent","parentElement","child","insertBefore","__thymeleafLocalVariables","removeChild","CheckedAttributeProcessor","ClassAppendAttributeProcessor","classes","className","EachAttributeProcessor","iterationInfo","localValueName","iterable","templateNode","cloneNode","value","localClone","appendChild","EmptyableAttributeProcessor","toString","EMPTYABLE_ATTRIBUTE_NAMES","FragmentAttributeProcessor","IfAttributeProcessor","expressionResult","remove","extractFragment","dialectPrefix","fragmentInfo","templateResolver","templateName","fragmentName","template","$","log","InsertAttributeProcessor","clearChildren","fragment","fragmentSignature","FragmentAttributeProcessorName","parameterNames","fragmentSignatureProcessor","parameters","localContext","parameterName","index","RemovableAttributeProcessor","REMOVABLE_ATTRIBUTE_NAMES","RemoveAttributeProcessor","lastElementChild","ReplaceAttributeProcessor","buildMessage","messageInfo","messageResolver","key","TextAttributeProcessor","messageResult","textContent","UnlessAttributeProcessor","parentNode","UTextAttributeProcessor","innerHTML","WithAttributeProcessor","localVariables","aliases","XmlNsAttributeProcessor","Dialect","expressionObjects","processors","DEFAULT_PREFIX","StandardDialect","map","attributeName","DEFAULT_CONFIGURATION","dialects","STANDARD_CONFIGURATION","Matcher","matches","processor","prefixes","unshift","hasAttribute","elementName","tagName","toUpperCase","InputBuffer","input","clear","lastPosition","positionStack","pop","undefined","Error","exhausted","position","length","mark","push","markAndClearOrReset","func","reset","read","pattern","remaining","substring","leadingWhitespace","match","RegExp","source","exec","startsWith","newPosition","Parser","grammar","parse","inputBuffer","matchResult","accept","errorMessage","error","parseWithExpression","expression","rule","findRuleByName","trackExpression","stackSize","expressionStack","splice","ExpressionProcessor","parser","AllInput","ruleName","defaultMatchProcessor","Rule","matchProcessor","ThymeleafRule","contextSensitiveMatchProcessor","args","apply","Grammar","startingRule","additionalRules","rules","concat","find","Optional","OneOrMore","results","OrderedChoice","expressions","Sequence","ZeroOrMore","namesAndSeparators","flatten","filter","item","RegularExpression","matchers","parseResults","i","parseResult","METADATA_FRAGMENT","METADATA_ITERATION","METADATA_MESSAGE","ThymeleafExpressionLanguage","chain","negation","link","reduce","linkContext","nextLink","messageKey","messageParameters","type","messageParameter","urlFunc","url","paramsList","slice","param","lhs","rhs","urlTemplate","head","placeholder","tail","paramEntry","join","expressionsAndSeparators","iterationStatusVariable","collectionExpressionAction","values","alias","replace","parseFloat","leftOperand","comparator","rightOperand","condition","truthyExpression","falseyExpression","propertyName","property","Object","prototype","hasOwnProperty","call","parameterContext","methodName","method","parametersAndSeparators","parameter","promisify","Promise","resolve","reject","arguments","TemplateEngine","FragmentSignatureGrammar","acc","rootElement","processNode","then","processFile","filePath","readFile","data","matcher","processorResult","children","reprocess"],"mappings":"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"}